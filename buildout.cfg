[buildout]
develop = .
extends = versions.cfg
versions = versions
show-picked-versions = true

parts = crate
        scripts
        test
        node_modules bower_modules grunt_script grunt_test bower_script

[scripts]
recipe = zc.recipe.egg:script
interpreter = py
eggs =  streammania
        crate

[crate]
recipe = hexagonit.recipe.download
url = https://cdn.crate.io/downloads/releases/crate-${versions:crate-server}.tar.gz
strip-top-level-dir = true

[test]
relative-paths = true
recipe = zc.recipe.testrunner
defaults = ['--auto-color']
eggs = streammania [test]

[node_modules]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm install webapp --prefix webapp; echo "\nNodeJS server side modules updated.\n"

[bower_modules]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH=${buildout:directory}/webapp/node_modules cd ${buildout:directory}/webapp; ${buildout:directory}/webapp/node_modules/.bin/bower install; cd -; echo "\nBower client-side modules updated.\n"

[grunt_script]
recipe = collective.recipe.template
input = inline:
    #! /bin/sh
    export NODE_PATH=${buildout:directory}/webapp/node_modules
    ${buildout:directory}/webapp/node_modules/.bin/grunt --gruntfile ${buildout:directory}/webapp/Gruntfile.js $@
output = ${buildout:bin-directory}/grunt
mode = 755

[grunt_test]
recipe = collective.recipe.template
input = inline:
    #! /bin/sh
    export NODE_PATH=${buildout:directory}/webapp/node_modules
    ${buildout:directory}/webapp/node_modules/.bin/grunt --gruntfile ${buildout:directory}/webapp/Gruntfile.js test $@
output = ${buildout:bin-directory}/karma-test
mode = 755

[bower_script]
recipe = collective.recipe.template
input = inline:
    #! /bin/sh
    export NODE_PATH=${buildout:directory}/webapp/node_modules
    cd ${buildout:directory}/webapp
    ${buildout:directory}/webapp/node_modules/.bin/bower $@
    cd -
output = ${buildout:bin-directory}/bower
mode = 755
